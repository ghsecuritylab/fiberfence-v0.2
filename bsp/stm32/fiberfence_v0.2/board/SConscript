import os
import rtconfig
from building import *

Import('SDK_LIB')

cwd = GetCurrentDir()

# add general drivers
src = Split('''
board.c
ports/myspi.c
CubeMX_Config/Src/stm32f4xx_hal_msp.c
''')

if GetDepend(['BSP_USING_ETH']):
    src += Glob('ports/phy_reset.c')
    
if GetDepend(['BSP_USING_SPI_FLASH']):
    src += Glob('ports/spi_flash_init.c')

if GetDepend(['BSP_USING_SDCARD']):
    src += Glob('ports/sdcard_port.c')

if GetDepend(['BSP_USING_LCD1602']):
    src += Glob('ports/lcd.c')
	
if GetDepend(['BSP_USING_KEY']):
    src += Glob('ports/drv_key.c')
	
if GetDepend(['BSP_USING_AD7924']):
    src += Glob('ports/AD7924.c')

if GetDepend(['BSP_USING_DAC7513']):
    src += Glob('ports/spi_dac_init.c')
	
if GetDepend(['BSP_USING_PIN_CTRL']):
    src += Glob('ports/pin_init.c')
	
if GetDepend(['BSP_USING_EEPROM']):
    src += Glob('ports/drv_eeprom.c')
	
path =  [cwd]
path += [cwd + '/CubeMX_Config/Inc']
path += [cwd + '/ports']
    
startup_path_prefix = SDK_LIB

if rtconfig.CROSS_TOOL == 'gcc':
    src += [startup_path_prefix + '/STM32F4xx_HAL/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc/startup_stm32f429xx.s']
elif rtconfig.CROSS_TOOL == 'keil':
    src += [startup_path_prefix + '/STM32F4xx_HAL/CMSIS/Device/ST/STM32F4xx/Source/Templates/arm/startup_stm32f429xx.s']
elif rtconfig.CROSS_TOOL == 'iar':
    src += [startup_path_prefix + '/STM32F4xx_HAL/CMSIS/Device/ST/STM32F4xx/Source/Templates/iar/startup_stm32f429xx.s']

CPPDEFINES = ['STM32F429xx']
group = DefineGroup('Drivers', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)

Return('group')
